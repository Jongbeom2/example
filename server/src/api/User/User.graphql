type Query {
  getUser(userId: ID!): User!
  getFriendList(userId: ID!): [Friend!]!
}

type User {
  _id: ID!
  email: String
  password: String
  nickname: String!
  profileImageURL: String
  profileThumbnailImageURL: String
  loginType: String!
  kakaoId: String
  friendList: [Friend!]!
}

type Friend {
  nickname: String!
  roomId: String
}

type Mutation {
  signIn(signInInput: SignInInput!): User!
  signInWithKakao(signInWithKakaoInput: SignInWithKakaoInput!): User!
  signOut: User
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  updateUserAddRoom(updateUserAddRoomInput: UpdateUserAddRoomInput!): User!
  updateUserRemoveRoom(updateUserRemoveRoomInput: UpdateUserRemoveRoomInput!): User!
}

input SignInInput {
  email: String!
  password: String!
}

input SignInWithKakaoInput {
  accessToken: String!
}

input CreateUserInput {
  email: String!
  password: String!
  nickname: String!
}

input UpdateUserInput {
  _id: ID!
  nickname: String!
  profileImageURL: String
  profileThumbnailImageURL: String
}

input UpdateUserAddRoomInput {
  userId: ID!
  roomId: ID!
}

input UpdateUserRemoveRoomInput {
  userId: ID!
  roomId: ID!
}
