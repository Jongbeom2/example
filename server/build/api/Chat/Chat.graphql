type Query {
  getChatList(roomId: ID!, skip: Int!, size: Int!): [Chat!]!
}

type Chat {
  _id: ID!
  user: User!
  room: Room!
  isSystem: Boolean!
  content: String!
  imageURL: String
  thumbnailImageURL: String
  fileURL: String
  fileName: String
  isArchived: Boolean!
  createdAt: DateTime!
}

type Mutation {
  createChat(createChatInput: CreateChatInput!): Chat!
  archiveChat(archiveChatInput: ArchiveChatInput!): Chat!
}

input CreateChatInput {
  roomId: ID!
  userId: ID
  content: String!
  imageURL: String
  thumbnailImageURL: String
  fileURL: String
  fileName: String
}

input ArchiveChatInput {
  _id: ID!
}

type Subscription {
  chatCreated(roomId: ID!): Chat!
}
